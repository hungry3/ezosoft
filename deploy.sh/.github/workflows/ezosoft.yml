name: MERN CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  # Backend job (server)
  backend_deploy:
    name: Backend CI/CD
    runs-on: self-hosted
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false

      # Step 2: Pull the latest changes
      - name: Pull latest changes
        run: |
          git reset --hard
          git checkout main
          git pull origin main

      # Step 3: Setup Node.js environment for backend
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      # Step 4: Install dependencies for server
      - name: Install dependencies for server
        run: |
          cd server
          npm ci  # Install in 'server' directory

      # Step 5: Run backend deployment script
      - name: Run deployment script for backend
        run: |
          cd server
          chmod +x ../deploy.sh
          ../deploy.sh  # Run deploy.sh from the root folder

  # Frontend job (client)
  client_deploy:
    name: Client CI/CD
    runs-on: self-hosted
    needs: backend_deploy  # Ensure the backend job runs first
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false

      # Step 2: Pull the latest changes
      - name: Pull latest changes
        run: |
          git reset --hard
          git checkout main
          git pull origin main

      # Step 3: Setup Node.js environment for client
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      # Step 4: Install dependencies for client
      - name: Install dependencies for client
        run: |
          cd client
          npm ci  # Install in 'client' directory

      # Step 5: Build client-side project
      - name: Build client
        run: |
          cd client
          npm run build --if-present

      # Step 6: Run deployment script for client
      - name: Deploy client
        run: |
          cd client
          chmod +x ../deploy.sh
          ../deploy.sh  # Run deploy.sh from the root folder

  # Admin job (admin panel)
  admin_deploy:
    name: Admin CI/CD
    runs-on: self-hosted
    needs: backend_deploy  # Ensure the backend job runs first
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          clean: false

      # Step 2: Pull the latest changes
      - name: Pull latest changes
        run: |
          git reset --hard
          git checkout main
          git pull origin main

      # Step 3: Setup Node.js environment for admin
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      # Step 4: Install dependencies for admin
      - name: Install dependencies for admin
        run: |
          cd admin
          npm ci  # Install in 'admin' directory

      # Step 5: Build admin-side project
      - name: Build admin
        run: |
          cd admin
          npm run build --if-present

      # Step 6: Run deployment script for admin
      - name: Deploy admin
        run: |
          cd admin
          chmod +x ../deploy.sh
          ../deploy.sh  # Run deploy.sh from the root folder
